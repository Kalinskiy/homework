{"version":3,"sources":["Navbar/Navbar.module.css","HomeWork1,2/components/MessageDisplay/MessageDisplay.module.css","HomeWork1,2/HomeWork1,2/HomeWork.module.css","HomeWork1,2/components/TextMessage/TextMessage.module.css","common/Input/Input.module.css","HomeWork3/HomeWork3.module.css","HomeWork4/HomeWork4.module.css","HomeWork1,2/components/TextMessage/TextMessage.tsx","HomeWork1,2/components/MessageDisplay/MessageDisplay.tsx","HomeWork1,2/HomeWork1,2/HomeWork.tsx","Navbar/Navbar.tsx","common/Span/Span.tsx","common/Button/Button.tsx","common/Input/Input.tsx","HomeWork3/HomeWork3.tsx","HomeWork4/HomeWork4.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","TextMessage","props","className","s","text","MessageDisplay","general","image","messageBlock","HomeWork1","main","map","item","index","key","arr","Navbar","nav","to","activeClassName","activeLink","Span","increment","Button","onClick","click","buttonName","Input","error","type","onKeyPress","onKeyPressHandler","onChange","HomeWork3","useState","setIncrement","value","setValue","alertGreetingClick","alert","e","currentTarget","charCode","HomeWork4","App","path","render","HomeWork","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.18f8f418.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__xMFNw\",\"item\":\"Navbar_item__2Mso7\",\"activeLink\":\"Navbar_activeLink__1G5zb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"general\":\"MessageDisplay_general__24Zss\",\"image\":\"MessageDisplay_image__2aHil\",\"messageBlock\":\"MessageDisplay_messageBlock__3a5vK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arr\":\"HomeWork_arr__r2AcC\",\"main\":\"HomeWork_main__nzn2s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"TextMessage_text__3Zug2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Input_error__1JzP8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"general\":\"HomeWork3_general__14Lm6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"general\":\"HomeWork4_general__bIXev\"};","import React from 'react';\r\nimport s from './TextMessage.module.css'\r\n\r\n\r\ntype propsType = {\r\n    text?:any\r\n}\r\nfunction TextMessage(props:propsType) {\r\n    return (\r\n        <div className={s.text}>\r\n            {props.text}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default TextMessage;\r\n","import React from 'react';\r\nimport s from './MessageDisplay.module.css'\r\nimport TextMessage from \"../TextMessage/TextMessage\";\r\n\r\n\r\ntype propsType ={\r\n    text:any\r\n}\r\nfunction MessageDisplay(props:propsType) {\r\n    return (\r\n        <div className={s.general}>\r\n            <div className={s.image}></div>\r\n            <div className={s.messageBlock}>\r\n             <TextMessage text={props.text}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MessageDisplay;\r\n","import React from 'react';\r\nimport s from './HomeWork.module.css'\r\nimport MessageDisplay from \"../components/MessageDisplay/MessageDisplay\";\r\n\r\n\r\nfunction HomeWork1() {\r\n    const array = ['рационалист, ' , 'коммунист, ', 'анимешник']\r\n\r\n\r\n    return (\r\n        <div className={s.main}>\r\n            <MessageDisplay text={'Yo man,what`s going on here?'}/>\r\n            <MessageDisplay text={\r\n\r\n                array.map( (item: any, index: any) => {\r\n                    return <span key={index} className={ index === 1 ? s.arr : ''}>{item}</span>\r\n\r\n                })\r\n            }/>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeWork1;\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/homework1' activeClassName={s.activeLink}>home-work1,2</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/homework3' activeClassName={s.activeLink}>home-work3</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/homework4' activeClassName={s.activeLink}>home-work4</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/homework5' activeClassName={s.activeLink}>home-work5</NavLink>\r\n            </div>\r\n\r\n\r\n\r\n        </nav>\r\n\r\n\r\n    )\r\n}\r\nexport default Navbar;","import React from 'react';\r\n\r\n\r\nfunction Span(props:any) {\r\n    return (\r\n        <>\r\n            <span>{props.increment}</span>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Span","import React from 'react';\r\nimport './Button.module.css';\r\n\r\ntype propsType={\r\n    buttonName:string\r\n    click:()=>void\r\n}\r\nfunction Button(props:propsType) {\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <button onClick={props.click}>{props.buttonName}</button>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Button","import React from 'react';\r\nimport s from './Input.module.css';\r\n\r\n\r\ntype propsType = {\r\n    error?: boolean\r\n    onChange: any\r\n    value: string\r\n    onKeyPressHandler: any\r\n}\r\nconst Input = (props: propsType) => {\r\n\r\n\r\n    return (\r\n\r\n        <div className={props.error ? s.error : ''}>\r\n            <input type=\"text\" onKeyPress={props.onKeyPressHandler} onChange={props.onChange}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Input","import React, {useState} from 'react';\r\nimport Span from \"../common/Span/Span\";\r\nimport Button from \"../common/Button/Button\";\r\nimport Input from \"../common/Input/Input\";\r\nimport s from './HomeWork3.module.css'\r\n\r\n\r\nconst HomeWork3 = () => {\r\n    const spanValue = 0;\r\n    const [increment, setIncrement] = useState(spanValue)\r\n    const [value, setValue] = useState('')\r\n\r\n    const alertGreetingClick = () => {\r\n        alert('Привет ' + value)\r\n         setValue('')\r\n    }\r\n\r\n    const incrementFunction = () => {\r\n        setIncrement(increment + 1)\r\n    }\r\n\r\n    const onChange = (e: any) => {\r\n        setValue(e.currentTarget.value)\r\n\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent)=>{\r\n        if (e.charCode === 13) {\r\n            alertGreetingClick();\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className={s.general}>\r\n            <Span increment={increment}/>\r\n            <Input onChange={onChange} value={value} onKeyPressHandler={onKeyPressHandler}/>\r\n            <Button  buttonName={'Alert'} click={alertGreetingClick}/>\r\n            <Button  buttonName={'Incr'} click={incrementFunction} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default HomeWork3","import React, {useState} from 'react';\r\nimport Span from \"../common/Span/Span\";\r\nimport Button from \"../common/Button/Button\";\r\nimport Input from \"../common/Input/Input\";\r\nimport s from './HomeWork4.module.css'\r\n\r\n\r\nconst HomeWork4 = () => {\r\n    const spanValue = 0;\r\n    const [increment, setIncrement] = useState(spanValue)//приплюсовка спана\r\n    const [value, setValue] = useState(\"\")//алерт спана приветствие\r\n    const [error,setError] = useState(true) // при передачи пропса error в инпут будет красный фон\r\n\r\n\r\n\r\n\r\n\r\n    const alertGreetingClick = () => {\r\n        alert('Привет ' + value)\r\n        setValue(\"\")\r\n    }\r\n\r\n    const incrementFunction = () => {\r\n        setIncrement(increment + 1)\r\n    }\r\n\r\n    const onChange = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        setValue(e.currentTarget.value)\r\n\r\n    }\r\n    const onKeyPressHandler = (e: KeyboardEvent)=>{\r\n        if (e.charCode === 13) {\r\n            alertGreetingClick();\r\n        }\r\n        setValue(\"\")\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={s.general}>\r\n            <Span increment={increment}/>\r\n            <Input onChange={onChange} value={value}  onKeyPressHandler={onKeyPressHandler} />\r\n            <Button  buttonName={'Alert'} click={alertGreetingClick}/>\r\n            <Button  buttonName={'Incr'} click={incrementFunction} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default HomeWork4","import React from 'react';\nimport './App.css';\nimport HomeWork1 from \"./HomeWork1,2/HomeWork1,2/HomeWork\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport Navbar from \"./Navbar/Navbar\";\nimport HomeWork3 from \"./HomeWork3/HomeWork3\";\nimport HomeWork4 from \"./HomeWork4/HomeWork4\";\n\nfunction App() {\n\n\n    return (\n\n        <div className={'App'}>\n            <BrowserRouter>\n            <Navbar/>\n            <Route path='/homework1' render={() => <HomeWork1/>}/>\n            <Route path='/homework3' render={() => <HomeWork3/>}/>\n            <Route path='/homework4' render={() => <HomeWork4/>}/>\n        </BrowserRouter>\n        </div>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}